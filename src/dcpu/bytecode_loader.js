// compiled version of programs/control.dasm
const DEMO_BYTECODE = [0x7f81,0x006e,0x1a00,0x84e1,0x1e20,0x7c12,0xf615,0x1fc1,0x001e,0x7c12,0x7406,0x1fc1,0x001f,0x7c12,0x1910,0x1fc1,0x0020,0x7c12,0x1842,0x1fc1,0x0021,0x7c12,0x8697,0x1fc1,0x0022,0x88e2,0x18f3,0x7f81,0x0004,0x6381,0xffff,0xffff,0xffff,0xffff,0xffff,0x8401,0x7c21,0x8000,0x7a40,0x001e,0x6381,0x0501,0x090c,0x6381,0x0301,0x7c01,0x0020,0x1004,0x0c02,0x7c02,0x8000,0x7c20,0x0029,0x6001,0x6381,0x0b01,0x2041,0x8452,0x7f81,0x0046,0x7c20,0x002c,0x8862,0x7c72,0x0020,0x7c20,0x0048,0x8802,0x7f81,0x0038,0x6041,0x6381,0x8461,0x8882,0xb094,0x8481,0x6381,0x0f01,0x0b01,0x8461,0x7c41,0x0020,0x7c20,0x002c,0x7c72,0x001f,0x7f81,0x005b,0x8862,0x7f81,0x0052,0x6041,0x6061,0x6381,0x0301,0x0b01,0x0441,0x7c4c,0x0020,0x7c01,0x8000,0x0901,0x8802,0x7c16,0x8180,0x7f81,0x0065,0x6041,0x6001,0x6381,0x7c20,0x0002,0x7c20,0x0023,0x9001,0x7c21,0x4801,0x7a40,0x001f,0x8801,0x8421,0x7a40,0x0022,0x7d40,0x00cf,0x8421,0x7c20,0x005e,0x84a1,0x88a2,0x7cb6,0x02ff,0x7f81,0x0081,0x84a1,0x7c20,0x008f,0x7c20,0x00e6,0x7c20,0x0125,0x7f81,0x0081,0x8bd2,0x0186,0x7c20,0x00b8,0x8bd2,0x0185,0x7c20,0x00c1,0x8bd2,0x0187,0x7c20,0x00ca,0x7c52,0x0090,0x8bc1,0x0186,0x7c52,0x0091,0x8bc1,0x0185,0xc452,0x8bc1,0x0187,0xa7c1,0x0189,0x8c01,0x7c21,0x0082,0x7a40,0x001f,0x8852,0x87c1,0x0189,0x7c21,0x0083,0x7a40,0x001f,0x8852,0xc3c1,0x0189,0x6381,0x7801,0x0188,0xc016,0x8802,0x03c1,0x0188,0x87c1,0x0186,0x6381,0x7801,0x0188,0x8414,0x8803,0x03c1,0x0188,0x87c1,0x0185,0x6381,0xa7c1,0x0188,0x87c1,0x0187,0x6381,0x7c12,0x4801,0x7c20,0x00d5,0x7d60,0x0000,0x0b01,0x8801,0x7a40,0x001f,0x7c52,0x0090,0x8bc1,0x0186,0x7c52,0x0091,0x8bc1,0x0185,0xc452,0x8bc1,0x0187,0x6041,0x6381,0x0b01,0x8421,0x7801,0x0188,0xa414,0x7c20,0x00fe,0xa416,0x7c20,0x0114,0xa42f,0x7801,0x0189,0xa414,0xc041,0xa416,0x7c41,0x00f0,0x082c,0x8801,0x7a40,0x0022,0x6041,0x6381,0xa812,0x7c21,0x0020,0xac12,0x7c21,0x0040,0xb012,0x7c21,0x0060,0xb412,0x7c21,0x0080,0xb812,0x7c21,0x00a0,0xbc12,0x7c21,0x00c0,0xc012,0x7c21,0x00f0,0x6381,0x8412,0xc021,0x8812,0xbc21,0x8c12,0xb421,0x9012,0xac21,0x9412,0xa421,0x9812,0x9c21,0x9c12,0x9421,0xa012,0x8c21,0x6381,0x7d80,0x0001,0x7c20,0x012e,0x7c20,0x015d,0x7d80,0x0000,0x6381,0x7c21,0xf000,0x84c1,0x78e1,0x0188,0x78a1,0x0188,0x8ce7,0xa881,0x7c41,0x0020,0x9892,0x7c41,0x003d,0x9c92,0x7c41,0x003d,0xa4b4,0xa096,0x1cd6,0x7c41,0x002b,0xc0b2,0x8c92,0x7c41,0x002b,0xa4b6,0x9494,0x1cd4,0x7c41,0x002d,0x84b2,0xa892,0x7c41,0x002d,0xc061,0x7c20,0x002c,0xc461,0x7c20,0x002c,0x8883,0x88c2,0x8894,0x7f81,0x0137,0x6381,0x8c81,0x7c21,0xf000,0xa7d6,0x0189,0x7c21,0x0f00,0x7c41,0x004c,0xa061,0x7c20,0x002c,0x7c41,0x0020,0x9c61,0x7c20,0x002c,0xa461,0x7c20,0x002c,0x7c21,0xf000,0xa7d4,0x0189,0x7c21,0x0f00,0x7c41,0x0052,0xe461,0x7c20,0x002c,0x7c41,0x0020,0xe061,0x7c20,0x002c,0xe861,0x7c20,0x002c,0x6381,0x0000,0x0000,0x0000,0x0008,0x0008]

export default class BytecodeLoader {

  constructor(element, callback) {
    this.element = element
    this.callback = callback

    this.element.addEventListener('change', this.loadFromFile.bind(this))
    this.loadFromStorage()
  }

  loadFromStorage() {
    try {
      let bytecode = JSON.parse(localStorage.getItem("bytecode"))
      if (bytecode) {
        this.callback(bytecode)
      } else {
        this.loadDemo()
      }
    } catch (err) {
      console.log("Caught error:", err)
      this.loadDemo()
    }
  }

  loadDemo() {
    console.log("Loading demo bytecode")
    this.callback(DEMO_BYTECODE)
  }

  loadFromFile() {
    if (!window.FileReader) {
      alert("Sorry, your browser isn't supported :(")
      return
    }

    let callback = this.callback
    let reader = new FileReader()
    reader.onload = function() {
      if (reader.result.indexOf("SET ") > 0) {
        alert("It looks like you selected an Assembly source file. Only compiled bytecode (in little endian format) is supported.")
      }

      let bytecode = new Array(Math.ceil(reader.result.length / 2))

      let i = 0
      let j = 0
      while(i < reader.result.length) {
        let low  = reader.result.charCodeAt(i++) || 0
        let high = reader.result.charCodeAt(i++) || 0

        bytecode[j++] = (low << 8) + high
      }

      localStorage.setItem("bytecode", JSON.stringify(bytecode))
      callback(bytecode)
    }
    reader.readAsBinaryString(this.element.files[0])
  }
}
