;;; Hardware detection ;;;

  HWN I ; read number of devices in i
  SET J, 0

:hardware_detection_loop
  HWQ J ; query device j

  ; monitor
  IFE A, 0xf615
  SET PC, monitor_detected

:hardware_detection_loop_continue
  ; increment counter
  ADD J, 1
  IFE J, I
  SET PC, initialize_display

  ; finished
  SET PC, hardware_detection_loop

:monitor_detected
  SET [display_address], J
  SET PC, hardware_detection_loop_continue

:display_address
  DAT 0xffff

;;; Initialisation ;;;

:initialize_display

  ; map display to memory 0x8000 - 0x8180
  SET A, 0
  SET B, 0x8000
  HWI [display_address]

;;; Render bars ;;;
  SET I, 0x8000

:bar_loop_restart
  SET X, 0
  SET A, 0x0700
  SET B, 0x0020

:bar_loop
  JSR draw_char
  ADD I, 1

  IFE X, 3
  SET A, 0x0E00

  IFE X, 7
  SET A, 0x0300

  IFE X, 11
  SET A, 0x0200

  IFE X, 15
  SET A, 0x0500

  IFE X, 19
  SET A, 0x0400

  IFE X, 23
  SET A, 0x0100

  IFE X, 27
  SET A, 0x0000

  ADD X, 1

  IFL X, 32
  SET PC, bar_loop

  IFL I, 0x8180
  SET PC, bar_loop_restart

;;; Draw text

  SET I, 0x80A0
  SET C, text

:draw_text_loop
  SET A, 0xF000
  SET B, [C]
  JSR draw_char

  ADD I, 1
  ADD C, 1
  IFN [C], 0x0000
  SET PC, draw_text_loop

  SUB PC, 1

:draw_char
  ; set screen to our target colour
  SET [I], A

  ; set the character
  XOR [I], B
  SET PC, POP

:text
  DAT "      N O   S I G N A L         ", 0x0000
